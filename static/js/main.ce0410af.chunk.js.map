{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","ContactsProvider","Provider","ContactsConsumer","Consumer","reducer","state","action","type","payload","Object","objectSpread","contacts","filter","contact","id","concat","toConsumableArray","map","c","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","resp","data","wrap","_context","prev","next","fetch","sent","json","stop","react_default","createElement","props","children","Component","Contact","showContactInfo","onShowClick","onDeleteClick","_ref","method","status","_x","_x2","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","react","Contact_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","handleFormControls","e","_e$target","target","defineProperty","onSubmit","_this$state","preventDefault","abrupt","headers","Content-Type","body","JSON","stringify","history","push","_this$state2","layout_TextInputGroup","EditContact","match","params","console","log","_callee2","_context2","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce0410af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\n\r\nconst {\r\n  Provider: ContactsProvider,\r\n  Consumer: ContactsConsumer\r\n} = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => {\r\n          return contact.id !== payload;\r\n        })\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(c => (c.id === payload.id ? payload : c))\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const resp = await fetch('https://jsonplaceholder.typicode.com/users');\r\n    const data = await resp.json();\r\n    this.setState({ contacts: data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ContactsProvider value={this.state}>\r\n        {this.props.children}\r\n      </ContactsProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = ContactsConsumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { fetch } from 'whatwg-fetch';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Contact extends Component {\r\n  static propTypes = {\r\n    contact: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      email: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired\r\n    })\r\n  };\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState(state => {\r\n      return {\r\n        showContactInfo: !state.showContactInfo\r\n      };\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    const resp = await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      {\r\n        method: 'DELETE'\r\n      }\r\n    );\r\n    if (resp.status === 200) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />{' '}\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-edit\"\r\n                    style={{\r\n                      float: 'right',\r\n                      cursor: 'pointer',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Contact } from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> list\r\n              </h1>\r\n              {contacts.map(contact => {\r\n                return <Contact key={contact.id} contact={contact} />;\r\n              })}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  placeholder: '',\r\n  type: 'text',\r\n  onChange: () => {}\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from './../layout/TextInputGroup';\r\nimport { fetch } from 'whatwg-fetch';\r\n\r\nexport class AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  handleFormControls = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const resp = await fetch('https://jsonplaceholder.typicode.com/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name, email, phone })\r\n    });\r\n\r\n    const data = await resp.json();\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: data\r\n    });\r\n\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from './../layout/TextInputGroup';\r\nimport { fetch } from 'whatwg-fetch';\r\n\r\nexport class EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const resp = await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = await resp.json();\r\n    const { name, email, phone } = contact;\r\n    this.setState({ name, email, phone });\r\n  }\r\n\r\n  handleFormControls = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const resp = await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ name, email, phone })\r\n      }\r\n    );\r\n\r\n    const data = await resp.json();\r\n\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: data\r\n    });\r\n\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.handleFormControls}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header({ branding }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My app'\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About contact manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport { EditContact } from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add/\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}